@keyframes startPulsate {
  0% {
      transform: scale(0.1, 0.1);
      opacity: 0.0;
  }
  40% {
      transform: scale(0.1, 0.1);
      opacity: 0.0;
  }
  50% { opacity: 1.0; }
  60% {
      transform: scale(1.5, 1.5);
      opacity: 0.0;
  }
  100% {
    transform: scale(0.1, 0.1);
    opacity: 0;
  }
}
@keyframes flickerErrors {
  0%  { opacity: 0.5; }
  40% { opacity: 0.5; }
  50% { opacity: 0.0; }
  100% { opacity: 0.5; }
}


#grid:not([data-game-state]) .puzzle-start-pulsator,
#grid[data-game-state='waiting'] .puzzle-start-pulsator {
  stroke: #fff;
  stroke-width: 3px;
  fill: none;
  animation: startPulsate 4s ease-in infinite;
}
#grid[data-game-state='playing'] .puzzle-end-pulsator {
  stroke: #fff;
  stroke-width: 3px;
  fill: none;
  animation: startPulsate 1.5s ease-in infinite;
}


#gridAll { }

/* Themeing */
/* #C5C5AC; 7C819D; #EDC9AF; #708090 all nice for BG */
md-content { box-shadow: inset 5px 5px 28px rgba(0,0,0,.5); }
/*.grid-base,
.grid-extras { filter: url('#glow'); }
.snake { filter: url('#glow'); }*/

/* default for hexagons is gray unless using the gray theme */
polygon.hexagon { stroke:gray; fill:gray; }
polygon.triangle { fill:orange; stroke:none; }
.tetris-square rect { fill:yellow; stroke:none; }
.tetris-hole-square rect { fill:none; stroke:blue; stroke-width:4; }

body:not([data-theme]) md-content { background-color: #B7B7B5; }
body:not([data-theme]) .grid-base,
body:not([data-theme]) .grid-extras { stroke:black; fill:black; }
body:not([data-theme]) .snake { stroke:white; fill:white; }
body:not([data-theme]) polygon.hexagon { stroke:gray; fill:gray; }
body:not([data-theme]) .tetris-square rect { stroke:yellow; fill:yellow; }

body[data-theme='default'] md-content { background-color: #B7B7B5; }
body[data-theme='default'] .grid-base,
body[data-theme='default'] .grid-extras { stroke:#5D5D5B; fill:#5D5D5B; }
body[data-theme='default'] .snake { stroke:#BEFCEE; fill:#BEFCEE; }
body[data-theme='default'] polygon.hexagon { stroke:#1F211F; fill:#1F211F; }
body[data-theme='default'] .tetris-square rect { stroke:#F4CC3E; fill:#F4CC3E; }

body[data-theme='blue'] md-content { background-color: #3C4AF1; }
body[data-theme='blue'] .grid-base,
body[data-theme='blue'] .grid-extras { stroke:#161D9D; fill:#161D9D; }
body[data-theme='blue'] .snake { stroke:#AFD2FB; fill:#AFD2FB; }

body[data-theme='blue-green'] md-content { background-color: #1F2019; }
body[data-theme='blue-green'] .grid-base,
body[data-theme='blue-green'] .grid-extras { stroke:#133DE2; fill:#133DE2; }
body[data-theme='blue-green'] .snake { stroke:#5DDB73; fill:#5DDB73; }

/*body[data-theme='blue-white'] md-content { background-color: #17223C; }
body[data-theme='blue-white'] .grid-base,
body[data-theme='blue-white'] .grid-extras { stroke:#13203F; fill:#13203F; }
body[data-theme='blue-white'] .snake { stroke:#EFF0EC; fill:#EFF0EC; }*/

body[data-theme='blue-white'] md-content { background-color: #92B0E8; }
body[data-theme='blue-white'] .grid-base,
body[data-theme='blue-white'] .grid-extras { stroke:#425D94; fill:#425D94; }
body[data-theme='blue-white'] .snake { stroke:#E0E2E7; fill:#E0E2E7; }


body[data-theme='orange'] md-content { background-color: #EFB530; }
body[data-theme='orange'] .grid-base,
body[data-theme='orange'] .grid-extras { stroke:#3D310D; fill:#3D310D; }
body[data-theme='orange'] .snake { stroke:#FFFDB9; fill:#FFFDB9; }

body[data-theme='light-green'] md-content { background-color: #64E84E; }
body[data-theme='light-green'] .grid-base,
body[data-theme='light-green'] .grid-extras { stroke:#255821; fill:#255821; }
body[data-theme='light-green'] .snake { stroke:#FCFACB; fill:#FCFACB; }
body[data-theme='light-green'] polygon.hexagon { stroke:#0D1F15; fill:#0D1F15; }

/* These are for the symmetry tutorials */
body[data-theme='blue-green'] md-content { background-color: #8F8559; }
body[data-theme='blue-green'] .grid-base,
body[data-theme='blue-green'] .grid-extras { stroke:#3E5691; fill:#3E5691; }
body[data-theme='blue-green'] .snake { stroke:#D0D0CD; fill:#D0D0CD; }

body[data-theme='brown'] md-content { background-color: #596917; }
body[data-theme='brown'] .grid-base,
body[data-theme='brown'] .grid-extras { stroke:#255821; fill:#255821; }
body[data-theme='brown'] .snake { stroke:#BDCD85; fill:#BDCD85; }
body[data-theme='brown'] .tetris-square { stroke:#B79C28; fill:#B79C28; }

body[data-theme='dark-red'] md-content { background-color: #3A0E0A; }
body[data-theme='dark-red'] .grid-base,
body[data-theme='dark-red'] .grid-extras { stroke:#58211A; fill:#58211A; }
body[data-theme='dark-red'] .snake { stroke:#A5A68D; fill:#A5A68D; }


body[data-theme='treehouse'] md-content { background-color: #604527; }
body[data-theme='treehouse'] .grid-base,
body[data-theme='treehouse'] .grid-extras { stroke:#423827; fill:#423827; }
body[data-theme='treehouse'] .snake { stroke:#999997; fill:#999997; }

body[data-theme='treehouse-yellow'] md-content { background-color: #5D7273; } /* TODO: Add a gradient! */
body[data-theme='treehouse-yellow'] .grid-base,
body[data-theme='treehouse-yellow'] .grid-extras { stroke:#212825; fill:#212825; }
body[data-theme='treehouse-yellow'] .snake { stroke:#CF9429; fill:#CF9429; }


body[data-theme='treehouse-violet'] md-content { background-color: #5D7273; } /* TODO: Add a gradient! */
body[data-theme='treehouse-violet'] .grid-base,
body[data-theme='treehouse-violet'] .grid-extras { stroke:#212825; fill:#212825; }
body[data-theme='treehouse-violet'] .snake { stroke:#C537F4; fill:#C537F4; }


body[data-theme='treehouse-orange'] md-content { background-color: #5D7273; } /* TODO: Add a gradient! */
body[data-theme='treehouse-orange'] .grid-base,
body[data-theme='treehouse-orange'] .grid-extras { stroke:#212825; fill:#212825; }
body[data-theme='treehouse-orange'] .snake { stroke:#EA7D2B; fill:#EA7D2B; }

body[data-theme='treehouse-lightgreen'] md-content { background-color: #5D7273; } /* TODO: Add a gradient! */
body[data-theme='treehouse-lightgreen'] .grid-base,
body[data-theme='treehouse-lightgreen'] .grid-extras { stroke:#212825; fill:#212825; }
body[data-theme='treehouse-lightgreen'] .snake { stroke:#EAD1AB; fill:#EAD1AB; }


body[data-theme='gray'] md-content { background-color: #; }
body[data-theme='gray'] .grid-base,
body[data-theme='gray'] .grid-extras { stroke:#; fill:#; }
body[data-theme='gray'] .snake { stroke:#; fill:#; }




.has-bend { stroke-linecap: round; }


/* Use Flexbox to center the puzzle */
/*#content {
  display: flex;
  flex-direction: row;
}
#content > .flex-padding { flex: 1; }
#content > #gridAll { flex: 0; }*/

.overlay {
  position: absolute;
  cursor: pointer;
  background-color: yellow;
  opacity: 0;
}
.overlay.isRemoval {
  background-color: red;
}
.overlay.canHighlight:hover {
  opacity: 0.2;
}
.overlay.isSelected:hover {
  opacity: 0.4;
}
.error {
  position: absolute;
  pointer-events: none;
  opacity: 0.5;
  background-color: red;
  animation: flickerErrors .5s ease-in infinite;
}
.md-button.md-icon-button.element {
  width: 48px;
  height: 48px;
  line-height: inherit;
  /*@include md-shadow-bottom-z-1();*/
  box-shadow: 0 2px 5px 0 rgba(0,0,0,.26);
  margin: 6px;
}
/** Specificify hacks */
.md-icon-button.element[disabled] {
  background-color: gray;
  opacity: 0.4;
}
.md-icon-button.element.isSelected {
  background-color: rgb(255,64,129);
}
.md-icon-button.element.isSelected:hover {
  background-color: rgb(255,64,129);
}
.md-icon-button.element md-icon {
  width: 32px;
  height: 32px;
}
.colorButton {
  min-width: 48px;
  margin: 0;
  vertical-align: top;
}
.colorButton.isSelected {
  border: 2px solid black;
}
.gridSquare {
  margin: 4px;
  display: inline-block;
  vertical-align: top;
  width: 200px;
  height: 200px;
  text-align: center;
  border: 3px solid black;
  position: relative; /* for overlays */
  overflow: hidden; /* for menu animations */
}
.gridMenu {
  display: block;
  left: 0;
  position: absolute;
  width: 100%;
  z-index: 3;
  background-color: rgba(25, 25, 50, 0.5);
  transition: transform 100ms ease-in;

  text-overflow: ellipsis;
  overflow: hidden;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
}
.gridMenu.isTop {
  top: 0;
  height: 30%;
  pointer-events: none;
  transform: translate(0, -100%);
  font-size: 24px;
}
.gridMenu.isBottom {
  top: 70%;
  height: 30%;
  transform: translate(0, 100%);
  cursor: default;
  font-size: 14px;
}
/**
 * Visible scrollbar on macs. It's not very pretty, but UI bad otherwise.
 * Based on https://davidwalsh.name/osx-overflow
 */
md-content::-webkit-scrollbar {
   -webkit-appearance: none;
   width: 12px;
}
md-content::-webkit-scrollbar-thumb {
   background-color: rgba(0,0,0,.5);
   -webkit-box-shadow: 0 0 1px rgba(255,255,255,.5);
}
.gridMenu a, .gridMenu md-icon {
  cursor: pointer;
}
ul.flatList {
  list-style-type: none;
  margin: 0;
  padding: 0;
}
ul.flatList > li {
  display: inline-block;
  margin-left: 8px;
}
ul.flatList > li+li {
  margin-right: 8px;
}
.gridMenu.isBottom > .bottomText {
  position: absolute;
  bottom: 0;
  width: 100%;
  text-align: center;
}
.gridSquare:hover .gridMenu {
  transform: none;
}
.gridDone {
  display: block;
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;

  abackground-color: rgba(0, 0, 0, 0.15);
  /*border: 3px solid rgba(0,0,0,0.4);
  box-shadow: 0px 0px 5px 2px goldenrod;*/
  z-index: 2;
  pointer-events: none;
}
.gridDoneText {
  font-size: 100px;
  line-height: 200px;
  text-align: center;
  transition-property: color, text-shadow, transform;
  transition-duration: 100ms;
  transition-timing-function: ease-in;
  /* for corner: translate(-75px, 0) scale(0.5) */
  transform: scale(2.0);
  color: transparent;
  text-shadow: 0 5px 0 rgba(0, 50, 0, 0.2);
}
.gridSquare:hover .gridDoneText {
  color: rgba(0,255,0,0.5);
  text-shadow: 0 0 5px rgba(0,0,0,0.8);
  transform: none;
}
.gridSquare.isPrivate {
  border: 3px solid #F66;
}
.fill {
  display: block;
  width: 100%;
  height: 100%;
  text-decoration: none;
}
.gridView {
  font-size: 160px;
  line-height: 200px;
  width: 160px;
  height: 160px;
}
.gridSquare.renderCloak .gridView {
  display: none;
}
.gridSquare.renderCloak.renderFail .gridView {
  display: block;
}
.gridSquare.renderCloak.renderFail svg {
  display: none;
}
.tcell {
  min-width: 32px;
  min-height: 32px;
  margin: 3px 3px;
  background-color: gray;
  vertical-align: top;
}
.tcell.yellow {
  background-color: yellow;
}
.tcell.blue {
  outline: 6px solid blue;
}
.foregroundText {
  color: #FFF;
}
.foregroundText a {
  color: #FFF;
}
.foregroundText a:visited {
  color: #DDF;
}
/* https://stackoverflow.com/questions/4910963/how-to-create-a-pulse-effect-using-webkit-animation-outward-rings */
.touchContainer {
  height: 64px;
  width: 64px;
  line-height: 64px;
  font-size: 48px;
  position: absolute;
  z-index: 20;
}
.touchIndicator {
  border: 5px solid #FFF;
  border-radius: 64px;
  /* https://mobiforge.com/design-development/designing-touch-thumb-and-finger-sized-design */
  height: 64px;
  width: 64px;
  position: absolute;
  animation: pulsate 1s ease-out;
  animation-iteration-count: infinite;
  opacity: 1.0
}
.touchIndicator.isSecond {
  animation-delay: 0.5s;
  opacity: 0.0;
}
@keyframes pulsate {
    0% {transform: scale(0.1, 0.1); opacity: 0.0;}
    50% {opacity: 1.0;}
    100% {transform: scale(1.0, 1.0); opacity: 0.0;}
}
